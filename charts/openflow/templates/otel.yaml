{{- if and .Values.openflow.license_key (eq .Values.exporter.enabled true) }}
{{- $domain := print (required "domain required!" .Values.domain) "." (required "domainsuffix required!" .Values.domainsuffix) }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-conf
  labels:
    app: opentelemetry
data:
  otel-collector-config: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
{{- if (eq .Values.exporter.kubestatemetrics.enabled true) }}
      prometheus:
          config:
            scrape_configs:
              - job_name: 'kube-state-collector'
                scrape_interval: 5s
                static_configs:
                  - targets: ['{{ .Values.exporter.kubestatemetrics.exporttarget }}','{{ .Values.exporter.kubestatemetrics.kubesystemtarget }}']
  {{- if (eq (index .Values "victoria-metrics-cluster" "enabled") true) }}
              - job_name: 'victoria-metrics-cluster'
                scrape_interval: 5s
                static_configs:
    {{- if (index .Values "victoria-metrics-cluster" "exporttarget") }}
                  - targets: 
                    {{- toYaml (index .Values "victoria-metrics-cluster" "exporttarget") | nindent 20 }}
    {{- else }}
                  - targets: ['{{ .Release.Name }}-victoria-metrics-cluster-vmstorage:8482',
                  '{{ .Release.Name }}-victoria-metrics-cluster-vmselect:8482',
                  '{{ .Release.Name }}-victoria-metrics-cluster-vminsert:8482']
                    
    {{- end }}
  {{- end }}
{{- end }}
    processors:
      batch:
{{- if (eq .Values.exporter.memorylimit.enabled true) }}
      memory_limiter:
        limit_mib: {{ .Values.exporter.memorylimit.limit_mib }}
        spike_limit_mib: {{ .Values.exporter.memorylimit.spike_limit_mib }}
        check_interval: {{ .Values.exporter.memorylimit.check_interval }}
{{- end }}
    extensions:
      health_check:
        endpoint: 0.0.0.0:13133
      zpages: {}
    exporters:
{{- if (eq .Values.jaeger.enabled true) }}
      jaeger:
        endpoint: openflow-jaeger-collector:14250
        tls:
          insecure: true
{{- end }}
{{- if (eq .Values.zipkin.enabled true) }}
      zipkin:
        endpoint: "http://zipkin:9411/api/v2/spans"
        format: proto
{{- end }}
{{- if (.Values.exporter.loglevel)}}
      logging:
       loglevel: {{ .Values.exporter.loglevel }}
{{- end }}
{{- if (eq .Values.loki.enabled true) }}
      loki:
        endpoint: "http://localhost:3100/loki/api/v1/push"
        tenant_id: "example2"
        labels:
          attributes:
            log.file.name: "filename"
{{- end }}

{{- if (eq .Values.exporter.opensearch.metricsenabled true) }}
      otlp/opensearchmetrics:
        endpoint: "{{ .Values.exporter.opensearch.data_prepper_host }}"  
  {{- if (eq .Values.exporter.opensearch.insecure true) }}
        insecure: true
  {{- end }}
  {{- if (eq .Values.exporter.opensearch.insecure_skip_verify true) }}
        insecure_skip_verify: true
  {{- end }}
{{- end }}

{{- if (eq .Values.exporter.opensearch.traceenabled true) }}
      otlp/opensearchtrace:
        endpoint: "{{ .Values.exporter.opensearch.data_prepper_host }}"  
  {{- if (eq .Values.exporter.opensearch.insecure true) }}
        insecure: true
  {{- end }}
  {{- if (eq .Values.exporter.opensearch.insecure_skip_verify true) }}
        insecure_skip_verify: true
  {{- end }}
{{- end }}
{{- if eq .Values.exporter.opensearch.logsenabled true }}
      otlp/opensearchlogs:
        endpoint: "{{ .Values.exporter.opensearch.data_prepper_host }}"  
  {{- if (eq .Values.exporter.opensearch.insecure true) }}
        insecure: true
  {{- end }}
  {{- if (eq .Values.exporter.opensearch.insecure_skip_verify true) }}
        insecure_skip_verify: true
  {{- end }}
{{- end }}

{{- if (eq .Values.exporter.elastic.metricsenabled true) }}
      # elastic/otr:
      #   apm_server_url: http://apm-server:8200
      otlp/elasticmetrics:
        endpoint: "{{ .Values.exporter.elastic.elastic_apm_server_endpoint }}"
{{- if (eq .Values.exporter.elastic.insecure true) }}
        insecure: true
{{- end }}
{{- if (eq .Values.exporter.elastic.insecure_skip_verify true) }}
        insecure_skip_verify: true
{{- end }}
        headers:
          Authorization: "{{ .Values.exporter.elastic.elastic_apm_server_authorization }}"  
{{- end }}
{{- if (eq .Values.exporter.elastic.traceenabled true) }}
      # elastic/otr:
      #   apm_server_url: http://apm-server:8200
      otlp/elastictrace:
        endpoint: "{{ .Values.exporter.elastic.elastic_apm_server_endpoint }}"  
{{- if (eq .Values.exporter.elastic.insecure true) }}
        insecure: true
{{- end }}
{{- if (eq .Values.exporter.elastic.insecure_skip_verify true) }}
        insecure_skip_verify: true
{{- end }}
        headers:
          Authorization: "{{ .Values.exporter.elastic.elastic_apm_server_authorization }}"  
{{- end }}
      prometheus:
       endpoint: "0.0.0.0:9464"
      #  namespace: otelcollector
      prometheusremotewrite:
        resource_to_telemetry_conversion:
          enabled: true
      {{- if .Values.victoriametrics.insertendpoint }}
        endpoint: "{{ .Values.victoriametrics.insertendpoint }}"
      {{- else if (eq (index .Values "victoria-metrics-cluster" "enabled") true) }}
        endpoint: "http://{{ .Release.Name }}-victoria-metrics-cluster-vminsert.{{ .Release.Namespace }}.svc.cluster.local:8480/insert/0/prometheus/"
      {{- else }}
        endpoint: "http://victoriametrics:8428/api/v1/write"
      {{- end }}
    service:
      extensions: [health_check, zpages]
      pipelines:
        metrics:
          receivers:
{{- if (eq .Values.exporter.kubestatemetrics.enabled true) }}
            - prometheus
{{- end }}
            - otlp
          exporters: 
            - prometheusremotewrite
            - prometheus
{{- if (eq .Values.exporter.opensearch.metricsenabled true) }}
            - otlp/opensearchmetrics
{{- end }}
{{- if (eq .Values.exporter.elastic.metricsenabled true) }}
            - otlp/elasticmetrics
{{- end }}
          processors: []
{{- if or (eq .Values.jaeger.enabled true) (eq .Values.zipkin.enabled true) (eq .Values.exporter.elastic.traceenabled true) (eq .Values.exporter.opensearch.traceenabled true) }}
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: 
  {{- if eq .Values.jaeger.enabled true }}
            - jaeger
  {{- end }}
  {{- if eq .Values.zipkin.enabled true }}
            - zipkin
  {{- end }}
  {{- if eq .Values.loki.enabled true }}
            - loki
  {{- end }}
  {{- if (eq .Values.exporter.opensearch.traceenabled true) }}
            - otlp/opensearchtrace
  {{- end }}
  {{- if (eq .Values.exporter.elastic.traceenabled true) }}
            - otlp/elastictrace
  {{- end }}
{{- end }}
{{- if (eq .Values.loki.enabled true) }}
        logs:
          receivers: [otlp]
          exporters: [ loki ]
{{- end }}
{{- if eq .Values.exporter.opensearch.logsenabled true }}
        logs:
          receivers: [filelog,otlp]
          exporters: 
            - otlp/opensearchlogs
{{- end }}
          
#        traces:
#          receivers: [otlp]
#          exporters: [jaeger]
#          exporters: [jaeger,logging]
#          exporters: [prometheus]
#        endpoint: "/api/prom/push"
#        endpoint: "/api/v1/write"
# prometheus:
#     config:
#       scrape_configs:
#         - job_name: 'otel-collector'
#           scrape_interval: 5s
#           static_configs:
#             - targets: [ 'localhost:55681' ]
# https://opentelemetry.io/docs/collector/configuration/#exporters

---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  labels:
    app: opentelemetry
spec:
  type: NodePort
  ports:
    - name: otlp # Default endpoint for OpenTelemetry receiver.
      port: 55680
      protocol: TCP
      targetPort: 55680
    - name: jaeger-grpc # Default endpoint for Jaeger gRPC receiver
      port: 14250
    - name: jaeger-thrift-http # Default endpoint for Jaeger HTTP receiver.
      port: 14268
    # - name: zipkin # Default endpoint for Zipkin receiver.
    #   port: 9411
    - name: metrics # Default endpoint for querying metrics.
      port: 8888
    - name: prometheus # Default endpoint for querying metrics.
      port: 9464
    - name: collector # Default endpoint for querying metrics.
      port: 55681
    - name: newport
      port: 4317
    - name: otlphttp
      port: 4318
  selector:
    app: opentelemetry
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  labels:
    app: opentelemetry
spec:
  selector:
    matchLabels:
      app: opentelemetry
  minReadySeconds: 5
  progressDeadlineSeconds: 120
  replicas: 1 
  template:
    metadata:
      labels:
        app: opentelemetry
    spec:
      {{- if .Values.openflow.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.exporter.nodeSelector | nindent 12 }}
      {{- else if .Values.exporter.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 12 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: 
        {{- toYaml .Values.imagePullSecrets | nindent 12 }}
      {{- end }}      
      containers:
        - command:
        {{- if .Values.exporter.command }}
            - {{ .Values.exporter.command }}
        {{- end }}
            - "--config=/conf/otel-collector-config.yaml"
            #           Memory Ballast size should be max 1/3 to 1/2 of memory.
            # - "--mem-ballast-size-mib=683"
            # - "--log-level=DEBUG"
          # image: otel/opentelemetry-collector-dev:latest
          resources:
            {{- toYaml .Values.exporter.resources | nindent 12 }}
          image: {{ default "otel/opentelemetry-collector" .Values.exporter.image | quote }}
          name: otel-collector
          ports:
            - containerPort: 55679 # Default endpoint for ZPages.
            - containerPort: 55680 # Default endpoint for OpenTelemetry receiver.
            - containerPort: 14250 # Default endpoint for Jaeger HTTP receiver.
            - containerPort: 14268 # Default endpoint for Jaeger HTTP receiver.
            # - containerPort: 9411 # Default endpoint for Zipkin receiver.
            - containerPort: 8888 # Default endpoint for querying metrics.
            - containerPort: 9464 # Prometheus exporter metrics
            - containerPort: 55681 # Collector port
            - containerPort: 4317 # new port
            - containerPort: 4318 # otlp-http
          volumeMounts:
            - name: otel-collector-config-vol
              mountPath: /conf
          #        - name: otel-collector-secrets
          #          mountPath: /secrets
          livenessProbe:
            httpGet:
              path: /
              port: 13133 # Health Check extension default port.
          readinessProbe:
            httpGet:
              path: /
              port: 13133 # Health Check extension default port.
      volumes:
        - configMap:
            name: otel-collector-conf
            items:
              - key: otel-collector-config
                path: otel-collector-config.yaml
          name: otel-collector-config-vol
#        - secret:
#            name: otel-collector-secrets
#            items:
#              - key: cert.pem
#                path: cert.pem
#              - key: key.pem
#                path: key.pem
---
  {{- if (eq .Values.exporter.exposed true) }}
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: ingressroute.otel
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - match: Host(`otel.{{$domain}}`)
      kind: Rule
      services:
        - name: otel-collector
          port: 4317
          scheme: h2c
  {{- end }}
{{- end }}



