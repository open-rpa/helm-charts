{{- if eq .Values.loki.enabled true }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: loki
  name: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: loki
    spec:
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 12 }}
      {{- else if .Values.loki.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.loki.nodeSelector | nindent 12 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: 
        {{- toYaml .Values.imagePullSecrets | nindent 12 }}
      {{- end }}      
      containers:
        - image: {{ .Values.loki.image }}
          imagePullPolicy: Always
          name: loki
          ports:
            - containerPort: 3100
              name: http
          env:
          volumeMounts:
            - name: loki-storage
              mountPath: /tmp/loki
            - mountPath: /etc/loki
              name: loki-datasources
              readOnly: false
      volumes:
        - name: loki-storage
          persistentVolumeClaim:
            claimName: loki-storage
        - name: loki-datasources
          configMap:
            defaultMode: 420
            name: loki-datasources
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
        fsGroup: 0
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-datasources
data:
  
  local-config.yaml: |-
    auth_enabled: false

    server:
      http_listen_port: 3100
      grpc_listen_port: 9096
    limits_config:
      allow_structured_metadata: true

    common:
      instance_addr: 127.0.0.1
      path_prefix: /tmp/loki
      storage:
        filesystem:
          chunks_directory: /tmp/loki/chunks
          rules_directory: /tmp/loki/rules
      replication_factor: 1
      ring:
        kvstore:
          store: inmemory

    query_range:
      results_cache:
        cache:
          embedded_cache:
            enabled: true
            max_size_mb: 100

    schema_config:
      configs:
        - from: 2020-10-24
          store: tsdb
          object_store: filesystem
          schema: v13
          index:
            prefix: index_
            period: 24h


    ruler:
      alertmanager_url: http://localhost:9093

    # By default, Loki will send anonymous, but uniquely-identifiable usage and configuration
    # analytics to Grafana Labs. These statistics are sent to https://stats.grafana.org/
    #
    # Statistics help us better understand how Loki is used, and they show us performance
    # levels for most users. This helps us prioritize features and documentation.
    # For more information on what's sent, look at
    # https://github.com/grafana/loki/blob/main/pkg/analytics/stats.go
    # Refer to the buildReport method to see what goes into a report.
    #
    # If you would like to disable reporting, uncomment the following lines:
    #analytics:
    #  reporting_enabled: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: loki-storage
  annotations:
    helm.sh/resource-policy: "keep"
  labels:
    app: loki
spec:
{{- if .Values.loki.persistence.storageclass }}
  storageClassName: "{{ .Values.loki.persistence.storageclass }}"
{{- end }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.loki.persistence.size }}
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  labels:
    name: loki
spec:
  type: NodePort
  ports:
    - port: 3100
      targetPort: 3100
      name: loki
  selector:
    app: loki
{{- end }}