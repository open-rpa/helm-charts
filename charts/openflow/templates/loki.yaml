{{- if eq .Values.loki.enabled true }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: loki
  name: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: loki
    spec:
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 12 }}
      {{- else if .Values.loki.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.loki.nodeSelector | nindent 12 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: 
        {{- toYaml .Values.imagePullSecrets | nindent 12 }}
      {{- end }}      
      containers:
        - image: {{ .Values.loki.image }}
          imagePullPolicy: Always
          name: loki
          ports:
            - containerPort: 3100
              name: http
          env:
          volumeMounts:
            - name: loki-storage
              mountPath: /tmp/loki
            - mountPath: /etc/loki
              name: loki-datasources
              readOnly: false
      volumes:
        - name: loki-storage
          persistentVolumeClaim:
            claimName: loki-storage
        - name: loki-datasources
          configMap:
            defaultMode: 420
            name: loki-datasources
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
        fsGroup: 0
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-datasources
data:
  
  local-config.yaml: |-
      auth_enabled: false

      server:
        http_listen_port: 3100

      ingester:
        lifecycler:
          address: 127.0.0.1
          ring:
            kvstore:
              store: inmemory
            replication_factor: 1
          final_sleep: 0s
        chunk_idle_period: 1h       # Any chunk not receiving new logs in this time will be flushed
        max_chunk_age: 1h           # All chunks will be flushed when they hit this age, default is 1h
        chunk_target_size: 1048576  # Loki will attempt to build chunks up to 1.5MB, flushing first if chunk_idle_period or max_chunk_age is reached first
        chunk_retain_period: 30s    # Must be greater than index read cache TTL if using an index cache (Default index read cache TTL is 5m)
        max_transfer_retries: 0     # Chunk transfers disabled


      schema_config:
        configs:
          - from: 2020-10-24
            store: boltdb-shipper
            object_store: filesystem
            schema: v11
            index:
              prefix: index_
              period: 24h

      storage_config:
        boltdb_shipper:
          active_index_directory: /tmp/loki/boltdb-shipper-active
          cache_location: /tmp/loki/boltdb-shipper-cache
          cache_ttl: 24h         # Can be increased for faster performance over longer query periods, uses more disk space
          shared_store: filesystem
        filesystem:
          directory: /tmp/loki/chunks

      compactor:
        working_directory: /tmp/loki/boltdb-shipper-compactor
        shared_store: filesystem

      limits_config:
        reject_old_samples: true
        reject_old_samples_max_age: 168h

      chunk_store_config:
        max_look_back_period: 0s

      table_manager:
        retention_deletes_enabled: false
        retention_period: 0s

      ruler:
        storage:
          type: local
          local:
            directory: /tmp/loki/rules
        rule_path: /tmp/loki/rules-temp
        ring:
          kvstore:
            store: inmemory
        enable_api: true
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: loki-storage
  annotations:
    helm.sh/resource-policy: "keep"
  labels:
    app: loki
spec:
{{- if .Values.loki.persistence.storageclass }}
  storageClassName: "{{ .Values.loki.persistence.storageclass }}"
{{- end }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.loki.persistence.size }}
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  labels:
    name: loki
spec:
  type: NodePort
  ports:
    - port: 3100
      targetPort: 3100
      name: loki
  selector:
    app: loki
{{- end }}