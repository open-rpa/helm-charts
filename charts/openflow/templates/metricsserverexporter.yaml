{{- if and (eq .Values.exporter.kubestatemetrics.enabled true) (eq .Values.exporter.kubestatemetrics.deploy true) }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: metrics-server-exporter
  labels:
    k8s-app: metrics-server-exporter
  annotations:
    helm.sh/resource-policy: "keep"
rules:
  - apiGroups: ["metrics.k8s.io"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metrics-server-exporter
  namespace: kube-system
  labels:
    k8s-app: metrics-server-exporter
  annotations:
    helm.sh/resource-policy: "keep"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: metrics-server-exporter
  annotations:
    helm.sh/resource-policy: "keep"
subjects:
  - kind: ServiceAccount
    namespace: kube-system
    name: metrics-server-exporter
roleRef:
  kind: ClusterRole
  name: metrics-server-exporter
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-server-exporter
  namespace: kube-system
  labels:
    k8s-app: metrics-server-exporter
spec:
  selector:
    matchLabels:
      k8s-app: metrics-server-exporter
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: metrics-server-exporter
    spec:
      serviceAccountName: metrics-server-exporter
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 12 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: 
        {{- toYaml .Values.imagePullSecrets | nindent 12 }}
      {{- end }}      
      containers:
        - name: metrics-server-exporter
          image: {{ .Values.exporter.kubestatemetrics.exporterimage | quote }}
          # command: ["python", "app.py", "--insecure-tls"]
          ports:
            - containerPort: 8000
              name: stats
          # env:
          #   - name: K8S_ENDPOINT
          #     value: "https://metrics-server.kube-system.svc.cluster.local"
---
kind: Service
apiVersion: v1
metadata:
  name: metrics-server-exporter
  namespace: kube-system
spec:
  selector:
    k8s-app: metrics-server-exporter
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-state-metrics
  annotations:
    helm.sh/resource-policy: "keep"
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - nodes
  - pods
  - services
  - resourcequotas
  - replicationcontrollers
  - limitranges
  - persistentvolumeclaims
  - persistentvolumes
  - namespaces
  - endpoints
  verbs:
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  - daemonsets
  - deployments
  - replicasets
  verbs:
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  - volumeattachments
  verbs:
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  - ingresses
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-state-metrics
  namespace: kube-system
  annotations:
    helm.sh/resource-policy: "keep"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-state-metrics
  annotations:
    helm.sh/resource-policy: "keep"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-state-metrics
subjects:
  - kind: ServiceAccount
    name: kube-state-metrics
    namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-state-metrics
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-state-metrics
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: kube-state-metrics
    spec:
      serviceAccountName: kube-state-metrics
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 12 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: 
        {{- toYaml .Values.imagePullSecrets | nindent 12 }}
      {{- end }}      
      containers:
        - name: kube-state-metrics
          image: {{ .Values.exporter.kubestatemetrics.image | quote }}
          ports:
            - containerPort: 8080
              name: stats
---
kind: Service
apiVersion: v1
metadata:
  name: kube-state-metrics
  namespace: kube-system
spec:
  selector:
    k8s-app: kube-state-metrics
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
{{- end }}
