NODE_ENV: production
domainsuffix:
domain:
apidomain:
protocol: http # set the https if using tlsSecret or certresolver
certificate:
  create: false # Create a certificate, when using certificate manager
  tlsSecret: # Add tlsSecret to all ingress controllers, handy if using certificate manager, or you imported your own certificate in a secret
  certresolver: # if you have added a certificate resolver to traefik, set it here also
  certmain: # to predefine certificate name, set this, usefull if using wildcard certificates, for instance: demo.openiap.io
  certsans: # set subjecter alternative names in the certificate. for instance: *.demo.openiap.io
nodeSelector: {} # remeber to set under mongodb too
port: # if the external port to access this is differente from 80/443, then set this the port users will access this instance on
openflow:
  image: openiap/openflow # set image for api deployment
  deploymentstrategy: Recreate # Recreate or RollingUpdate
  sessionAffinity: None # either None or ClientIP. Set to ClientIP to use sticky sessions ( clients will always hit the same pod, based on number of pods and client ip )
  # nodered_image: openiap/nodered
  # set possible image to be used when deploying new Nodered deployments
  nodered_images: '[{ "name": "Latest Plain Nodered", "image": "openiap/nodered" }]'
  # What url to show inside the robot's getting started page
  getting_started_url: https://skadefro.github.io/openrpa.dk/gettingstarted.html
  replicas: 1 # number of api pods to spin up
  port: 3000 # pod/deployment will use this port
  cache_store_type: memory # Default memory or redis
  cache_store_ttl_seconds: # Items expire from store after this amount of seconds
  cache_store_max: # Max items to store when using memory store
  cache_store_redis_password: # When store type is "redis" use this password for redis
  livenessProbe:
    enabled: true
    path: /livenessprobe
    initialDelaySeconds: 10
    periodSeconds: 2
    failureThreshold: 3
    timeoutSeconds: 5
  readinessProbe:
    enabled: true
    path: /loginproviders
    initialDelaySeconds: 2
    periodSeconds: 2
    failureThreshold: 3
    timeoutSeconds: 5
  startupProbe:
    enabled: false
    path: /loginproviders
    initialDelaySeconds: 2
    periodSeconds: 2
    failureThreshold: 3
    timeoutSeconds: 5
  auto_create_users: true # if trying to login using unknown username, auto create it ?
  auto_create_domains: # limit auto created logins to emails using these domains, seperated by comma ,
  allow_personal_nodered: true # enable the nodered tab in openflow
  auto_create_personal_nodered_group: true # to avoid users getting access denied first time creating nodered, pre-create the role and make user member of the role
  auto_create_personal_noderedapi_group: false # Auto create the role used for api access to users personal nodered
  persist_user_impersonation: # When impersonating, update on user object who you are impersonating, to persist the information
  # allow api node to listen on https, not recomended in docker, use a reverse proxy instead
  tls_crt:
  tls_key:
  tls_ca:
  tls_passphrase:
  multi_tenant: false # if multi tenant is enabled, will lock down default roles to avoid users can "see each other" any custom roles created will allow users of same role to see each other
  amqp_force_queue_prefix: false # to avoid users registering the same message queue names, force all messages queues to be prefixed with username, this disables load balancing of multiple nodereds !
  amqp_force_exchange_prefix: false # to avoid users registering the same message exchange names, force all messages exchanges to be prefixed with username, this disables load balancing of multiple nodereds !
  amqp_force_sender_has_read: true # If queue is a mongodb id, check user is member of the role or has read permission on the object it represents
  amqp_force_sender_has_invoke: false # Force user to have invoke permission on the mq or user object in order to send to it
  amqp_force_consumer_has_update: false # Force user has update permission on the mq or user object in order to consume the queue ( else needs read if amqp_force_sender_has_read is true
  amqp_enabled_exchange: false # enabled the amp exchange node in nodered, and enabled Register Exchange command in API
  upload_max_filesize_mb: 25 # max upload size for files in MB

  use_ingress_beta1_syntax: false # Use beta one syntax for ingress controller, default: false
  traefik_ipblock: false # Tell traefic to check IP before forwarding request, using OpenFlow blocklist endpoint

  # The SAML Provider need to sign all tokens issued, use this certificate to sign SAML tokens
  signing_crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURqRENDQW5TZ0F3SUJBZ0lKQUp5N0tIMTE1dkQ4TUEwR0NTcUdTSWIzRFFFQkN3VUFNRnN4Q3pBSkJnTlYKQkFZVEFrUkxNUk13RVFZRFZRUUlEQXBUYjIxbExWTjBZWFJsTVNFd0h3WURWUVFLREJoSmJuUmxjbTVsZENCWAphV1JuYVhSeklGQjBlU0JNZEdReEZEQVNCZ05WQkFNTUMzTnBaMjVwYm1kalpYSjBNQjRYRFRFNU1EUXdOekUwCk5ETXpORm9YRFRJNU1EUXdOREUwTkRNek5Gb3dXekVMTUFrR0ExVUVCaE1DUkVzeEV6QVJCZ05WQkFnTUNsTnYKYldVdFUzUmhkR1V4SVRBZkJnTlZCQW9NR0VsdWRHVnlibVYwSUZkcFpHZHBkSE1nVUhSNUlFeDBaREVVTUJJRwpBMVVFQXd3TGMybG5ibWx1WjJObGNuUXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCCkFRQy9JSkdEaGxLTU9SWkoycXQwSWpjSDZOWUFtZDVxQzQ4dkNJRE54QWZCbmQxQnN4WlVjWkl5dkFlT28yNDcKM3I0eTYwNDgxRHVUS2JaMTBTNjRqRU05aW1XTXB1TFlJRnVyQ3BWNzVEWWhxMS85Q0FJVHJqNjlmVDluSkptcwpjM2lxTnJ1Tlg1bDlISXdadWtQM1ZNRkJRNWZVd3N1ZnE0YW1NbnVnZmtyUEVzSngxK3VJb0NYU3pyblZvcnZpClZ0ZFh4a3M4N0l1S0ZnMDJIZ1RQSzdwc0FXYTBRY3g2ck04bkV5TUhwNUdlR1Rvb1NNbkcyZ1RGNWZOSVFNdTMKVEVoc2p3SWRTYmRwck1Gb1VZV05Bc2FueTJOQk0wREhZRUdjQlZhZ0xWNUhFUW5ySUM3NEhtNjYxdG9HaU5VSAoveW04U3VndTgwWVFiVGxPcTFWNnNkaVRBZ01CQUFHalV6QlJNQjBHQTFVZERnUVdCQlMrYWc1NGtITllKZ29pCm9yRnlia293THR5R3ZqQWZCZ05WSFNNRUdEQVdnQlMrYWc1NGtITllKZ29pb3JGeWJrb3dMdHlHdmpBUEJnTlYKSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQTZpZHBYdzdSR2pzcUpNanI2c1YvaQpXeXFsL2xkSy9sa1NCdnNBSENieDdQYi9rVUd2NHJNbndYMnBHdTR0YkFnSDc4eStmS3dzazllYkxDeTA4Y1k0Ckt5czhzbUpLenhWN0R6U3RVR1NvZmZMaFliVVVMK3UyNU5vVXc0TG1WQU5FU0NaMTZ3aTdPQUdJMkJnNFR6TXoKdnlIUHRaaE9wTXBNV2lzM2ZnRXFzV3QxS2VLcXo0Z2M5RnJtZDZPNlQzVVAxWTRBR3VEWnNScnpiU2RQS2JxbApxekprT2tQcGtHOGo3ZjFWNkk1ZlkzblZaSWk2YW1TcTM1RTJkQzVMY0dIQXRtT1lWL0c4TEQ3OUFnTVpFUU5vCkF2R2RnV1gvbXBFVkFjMmRFQkJlcUN6WjF1aVhWUjdERld2ZDFKTEpsdVRyTm9jMUROc0xNKzNEZFFiQ2JnYVcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  singing_key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQy9JSkdEaGxLTU9SWkoKMnF0MElqY0g2TllBbWQ1cUM0OHZDSUROeEFmQm5kMUJzeFpVY1pJeXZBZU9vMjQ3M3I0eTYwNDgxRHVUS2JaMQowUzY0akVNOWltV01wdUxZSUZ1ckNwVjc1RFlocTEvOUNBSVRyajY5ZlQ5bkpKbXNjM2lxTnJ1Tlg1bDlISXdaCnVrUDNWTUZCUTVmVXdzdWZxNGFtTW51Z2ZrclBFc0p4MSt1SW9DWFN6cm5Wb3J2aVZ0ZFh4a3M4N0l1S0ZnMDIKSGdUUEs3cHNBV2EwUWN4NnJNOG5FeU1IcDVHZUdUb29TTW5HMmdURjVmTklRTXUzVEVoc2p3SWRTYmRwck1GbwpVWVdOQXNhbnkyTkJNMERIWUVHY0JWYWdMVjVIRVFucklDNzRIbTY2MXRvR2lOVUgveW04U3VndTgwWVFiVGxPCnExVjZzZGlUQWdNQkFBRUNnZ0VBVXBjZ1NsV2hGamNWQ3BVVHdmdUhERVB4TmhGSHEwdVRkQitZaVZKTWg3NVAKL2pRRlVqaEJsT3JyMlJlR2F4aTEyQXNXby9LU1MrV2Frdzd4d1kzYkFKenRoUG9Zekl3dkVKcGlQa2MvblEwUgpUYVpJUDNqc1k3WGIwQlpnMGNTVVAvbW0wbENkWXhNUzk0c21FNXJzWitkdGxPTVlXc2NrU0cxSVB2SlVJV2FZCnl3NC9kaHJ3TWRsREVZS2tSbks1aDR1dXR1dzA1Q1VzNkZWN2F5cEJRRStGM3RxVlF3QWxGbWNueXdvZTB5WjQKZW1tWkRvT1dzNUk4cGNGbjZCSW1wZjN3UEg5UWhlQXJVaXRqV3YrZmI2cWRVaHJFVDBxMzh4dTZ5M1lJNFNLYQpXME9kUng4L3FTYllXdkpzbmxscDR0aUpDWE5IdnV6MVBKSGhxOUprQVFLQmdRRCt2dHlWcVJoaEJZTmd6WWorClFCaDNLcktrNEVqTXZaSGhEelhES0pMZ2JEVmJzNExrQkYySWZGOTF0S1k3d09CNVpXcU82Z3FqVVJBVE5hc1YKOExCOGE2TEpXYVJuTklLMnJkd1FwalFYcy92OVBSYnJwc2tTbDRJdUsyZWNBMjBSQkhicW5yNHZ5ZkQ4U3BzaApSdHlTUk5CRGVsaU01Z1JDM0JKKzBZbjBVUUtCZ1FEQUVZSUp3Y2xnQloyWmNNTlh1dW1lLzUxdHBHeGppRTJpCjZ3SDNsOHNTVDN1U1A4MHdndGdHaVFsUTRsR3BmSThqWkl4N0pwcGw0Qko1ZEtuVnpIS1dqMzA3YXYxcjdpU3QKLzJOVDNobzdaYkNlYzlhMHlJU2E3dTNGZGxzZ0VPcE45dURmbG5GQVQ3ZmIrM2d4Sk9DUWp1TkFCZXZaK2pScwpZY0ZhQWhGNW93S0JnUUNGUG9HVVNsRDFGblFrWXYwL3QzalVnK0hTK1hrNmxnRkNqYmthTGhPOURQeFB6Ykl0CjM5YW9lQjFhTExZeVZPMVVzZVl0Z0Y4MkUwVnNOc3NZKzc3a0pVeU5NclVhUWs0SWpTR3BGN1h4bS9PMi9vZ0oKbEVCaDJCdUFXTFdsMWVqcldNRjJjTGVidVcyeUdMZlJqUVg3LzhCTE95Z3I4bmZTSE5nVHV6Z0VNUUtCZ0JrZgpNUjhObGNWVmRyT25LQ1hGY09FM0ZlUk5hVS9yZUJ3akdQTEZpKzR0TDBDRno5VFVpR1R5YjZHQXVLV3VnUnBrCkFHdnJOSzYyakRRT3FsZ29rYVJYeUUySlJQUmxCYThzaEZWbjY0NXhVcFNuR2lJelNBVHIwM1hNY1ViVWI1RWIKQlhhNU9yN3FybVc3a3BENi9kUnFuQmEzcjQyblNFd1V6VEYwcTh4NUFvR0FIcXdRSyt1R0NTdlNsNENJUGhyRQpDREIvcytDK2NJNXVCeFJCMHVlNjc3L2lpdGZPSU9lOUNiTHE3R0tib0w4RVg3eXhKNVRLWjlYQmh5LzNCWmVNCllydEx3M2JicTNTN2hpUGFYSmE1dXZma3BWR1RnNEdzTnBJQ3VNTEJUaXJ6M0ZRV25UNFNZbzkrREVoalhEeVQKWlVOMERtUkJVNjNjWjRLSUlXd2xWUTA9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
  # To enable enterprise features, add your licanse key here
  license_key:
  # if not using helm to deploy mongodb, set this to the connection string if your mongodb
  external_mongodb_url:
  # if not using helm to deploy mongodb, set your desired database to use
  mongodb_db:
  # if not using mongodb replicate set, you cannot use the watch feature, then set this to false
  supports_watch: true
  # Use colors in console log
  log_with_colors: false
  # log when adding, updating, removing or clearing cache items
  log_cache: 
  # Log verbose and higher events related to login provider
  log_login_provider: 
  # Log verbose and higher websocket events
  log_websocket: 
  # Log verbose and higher oauth provider events
  log_oauth: 
  # Log verbose and higher webserver events
  log_webserver: 
  # Log verbose and higher database events 
  log_database: 
  # Log verbose and higher grafana events 
  log_grafana: 
  # Log verbose and higher events around house keeping
  log_housekeeping:
  # Log verbose and higher open telemtry registration events 
  log_otel: 
  # Log everytime a blocked ip connection is dropped
  log_blocked_ips:
  # Enable logging of all information events 
  log_information: 
  # Enable logging of all debug events 
  log_debug: 
  # Enable logging of all verbose events 
  log_verbose: 
  # Enable logging of all silly events 
  log_silly: 
  # Send all log events to a global echange
  log_to_exchange:
  # enable email validation of all non-federated users, require smtp settings to bet set
  validate_emails: 
  # enable "forgot password" by email validation for non-federated users, require smtp settings to bet set
  forgot_pass_emails:
  # when validating email, check if disposable email, using https://debounce.io/free-disposable-check-api/
  debounce_lookup: 
  # when validating email, check if disposable email by looking for name in the domains collection for _type disposable
  validate_emails_disposable: 
  # Node mailer, service type
  smtp_service: 
  # When sending service mails, sent from this email
  smtp_from: 
  # Username when sending ( smtp service=gmail for everything else, use smtp_url )
  smtp_user: 
  # password when sending ( smtp service=gmail for everything else, use smtp_url )
  smtp_pass: 
  # Use smtp url for configuration  ( see https://nodemailer.com/smtp/ or https://www.npmjs.com/package/nodemailer/v/2.2.0-beta.0 ) 
  smtp_url: 
  # Allow temp work around for bug in open openflow-api code
  amqp_allow_replyto_empty_queuename: false
  # To override the default minPoolSize of the database connection, usefull when needing a lot of watches or have many clients
  mongodb_minpoolsize:
  # To override the default maxPoolSize of the database connection, usefull when needing a lot of watches or have many clients
  mongodb_maxpoolsize:
  # Auto-create default indexes doing startup, default: true
  ensure_indexes:
  # openflow will keep track of all changes on all documents except inside these collections
  enable_openflow_amqp: true
  openflow_amqp_expiration: # messages send to backend expire after this amount of time. default: 25 min
  amqp_prefetch: # each api instance allows only this amount of message to be processed at the same time, default 50
  enable_entity_restriction: false # Add restrictions on who can create entities in different collections, default false
  enable_web_tours: true # Enable tours and notification about new features inside openflow
  enable_nodered_tours: false # Enable tours and notification about new features inside NodeRED
  ping_clients_interval: 10000 # each api node pings connected clients witht his interval, and update the user object for each online user

  # Use an dedicated message queue for distributing messages among all api instances ( to load balending trafic more evenly )
  skip_history_collections: audit,oauthtokens,openrpa_instances,workflow_instances,workitems,dbsize,mailhist
  websocket_max_package_count: "1048576" # 1048576
  websocket_package_size: 25000
  websocket_disconnect_out_of_sync: # close connection for clients that send double packages, default false
  update_acl_based_on_groups: true # when a user is added to a role, that role is given read permission on the user, so all members of that role can see all members, can be disabled here
  oidc_access_token_ttl: 480 # 8 hours
  oidc_authorization_code_ttl: 480
  oidc_client_credentials_ttl: 480
  oidc_refresh_token_ttl: 20160 # 14 days
  oidc_session_ttl: 20160

  # Give nodered time to install all packages, so skip liveliness check for this many seconds
  nodered_initial_liveness_delay: 120
  # To allow buying addon products or dedicated nodered instance, add stripe api key and secret
  stripe_api_key:
  stripe_api_secret:
  api_rate_limit: # to disable rate limits on all http requests, set this to false
  api_rate_limit_points: # to change the amount of points a hit consume, default: 1
  api_rate_limit_duration: # to change how long it takes for a point to expire in seconds, default: 60
  socket_rate_limit: # to disable rate limits on socket messages, set this to false
  socket_rate_limit_points: # to change the amount of points a hit consume, default: 1
  socket_rate_limit_duration: # to change how long it takes for a point to expire in seconds, default: 30
  socket_rate_limit_points_disconnect: # If client builds up this amount of points, disconnect the client, default: 600
  client_heartbeat_timeout: # Disconnect clients who has not send any messages after this many seconds, default: 60
  client_signin_timeout: # Disconnect clients who has not signed in after this many seconds, default: 120
  otel_trace_dashboardauth: # add trace for dashboardauth events, default: true
  otel_trace_pingclients: # add trace for each ping clients in openflow, default: true
  otel_trace_include_query: # include query in spans, default: false
  otel_trace_connection_ips: # track connection requests per ip address, default: false
  otel_trace_mongodb_per_users: # track all mongo actions per user, default: false
  otel_trace_mongodb_query_per_users: # track queries per user, default: false
  otel_trace_mongodb_aggregate_per_users: # track aggregates per user, default: false
  otel_trace_mongodb_insert_per_users: # track inserts per user, default: false
  otel_trace_mongodb_update_per_users: # track updates per user, default: false
  otel_trace_mongodb_delete_per_users: # track deletes per user, default: false
  aes_secret: who_ever_said_nodejs_isnt_sexy_should_be_shot_and_hanged # use this to encrypt parts of mongodb documents and hash user passwords
  nodered_allow_nodeselector: false # allow collection of all kubernete nodes labels and setting nodeSelector on nodered instances
  nodered_requests_memory: # set requested memory usage for new nodered instances, for instance: 128Mi
  nodered_requests_cpu: # set requested cpu usage for new nodered instances, for instance: 250n ( 1000n represents 1 vCPU )
  nodered_limits_memory: # limit memory usage for new nodered instances, for instance: 256Mi (kubernetes will restart the pod)
  nodered_limits_cpu: # limit cpu usage for new nodered instances, for instance: 450n ( 1000n represents 1 vCPU )
  nodered_liveness_failurethreshold: 5 # allow nodered liveness probe to fail this amount of times before restarting it, default 5
  nodered_liveness_timeoutseconds: 5 # each probe will timeout after this many seconds, default 5
  noderedcatalogues: # list of package catalogs to use in nodered for finding packages to install, seperated by ; ... default is https://catalogue.nodered.org/catalogue.json
  resources: {}
  api_ws_url: # force new nodereds and browser to use this url to access the api
  nodered_ws_url: # force new nodereds (but not browser) to use this url to access the api
  nodered_saml_entrypoint: # override openflow saml entry point for new nodereds ( to override url received in saml_federation_metadata )
  saml_federation_metadata: # Override SAML url for new nodered instances
  prometheus_measure_nodeid: # Collect prometheus metrics PER node in nodered ( default is per node type ), default: false
  prometheus_measure_queued_messages: # Collect prometheus metrics for openflow/nodered on socket messages waiting on a reply, default: false
  prometheus_measure__mongodb_watch: # Collect prometheus metrics for open change streams to mongodb, default: false
  prometheus_measure_onlineuser: # Collect prometheus metrics while updating onmline users every 10th second, default: false
  enable_analytics: # Enable analytics
  otel_trace_url: # Open Telemetry exporter trace URL
  otel_metric_url: # Open Telemetry exporter metrix URL
  otel_servicename: # Open Telemetry service name
  otel_trace_interval: 5000 # Open Telemetry trace sending interval
  otel_metric_interval: 5000 # Open Telemetry metric sending interval
  expected_max_roles: # to avoid dos we limited the number of roles, default 4000
  decorate_roles_fetching_all_roles: # default true, will grab all roles from the database and find accumulated roles in that array, if set to false will do multiple queries to the database to find all nested roles for the user
  roles_cached_in_seconds: # if decorate_roles_fetching_all_roles is true, how many seconds will we cache all roles, default is 300, to disable cache set to 0
  max_recursive_group_depth: # if decorate_roles_fetching_all_roles is false, limit how many nested groups to go though, default 2
  validate_user_form: # User validation form, if set, will force all users to be fill out this form in order to login.
  shorttoken_expires_in: # default 5m
  longtoken_expires_in: # default: 365d
  downloadtoken_expires_in: # default: 15m
  personalnoderedtoken_expires_in: # default: 365d
  otel_debug_log: false
  debug: # Configure logging for the debug plugin
  NO_PROXY: # Set NO_PROXY for all api and nodered nodes
  HTTP_PROXY: # Set HTTP_PROXY for all api and nodered nodes
  HTTPS_PROXY: # Set HTTPS_PROXY for all api and nodered nodes
  # limits:
  #   #   cpu: "1"
  #   #memory: 1Gi
  #   memory: 768Mi
  # requests:
  #   # cpu: "0.02"
  #   memory: 128Mi
  auto_hourly_housekeeping: true # Enable an hourly job, that does basic house keeping, default false
  housekeeping_update_usage_hourly: false # Doing house keeping, calculate each user and customers database usage every hour, default false ( if false runs every 12 hour )
  housekeeping_update_usersize_hourly: true # Doing house keeping, update dblock and usage information per customer every hour, default false ( if false runs every 12 hour )
  housekeeping_skip_collections: # Comma seperated list of collections to skip while calculating database usage

  workitem_queue_monitoring_enabled: 
  workitem_queue_monitoring_interval: 

  stripe_force_vat: false # When multi_tenant is enabled, force new customers to add VAT information, default false
  stripe_force_checkout: false # When multi_tenant is enabled, force users to accept a stripe checkout session for each purchaes, default true
  auto_create_user_from_jwt: # If openflow received an JWT for an unknown user, auto create the user. Used in certain demo setups, default false
  nodered_docker_entrypoints: # Used for docker setups, not relevant for kubernetes
  nodered_docker_certresolver: # Used for docker setups, not relevant for kubernetes

  # To use openflow as an webpush server, add your wapid certificate and email here
  wapid_pub: 
  wapid_key: 
  wapid_mail: 
rabbitmq:
  exposed: false
  default_user: admin
  # vm_memory_high_watermark: 1GB
  default_pass:
  resources: {}
  # limits:
  #   #   cpu: "1"
  #   #memory: 1Gi
  #   memory: 1Gi
  # requests:
  #   # cpu: "0.02"
  #   memory: 256Mi
grafana:
  enabled: false
  image: openiap/grafana:1.0.22 # set image used when deploying frafana
  oauth_client_id: application
  oauth_client_secret: secret
  allow_embedding: true # set to true if you want to allow browsers to render Grafana in a <frame>, <iframe>, <embed> or <object>. default is false.
  send_user_header: false # If enabled and user is not anonymous, data proxy will add X-Grafana-User header with username into the request, default is false.
  reporting_enabled: false # sends usage counters to stats.grafana.org every 24 hours.
  oauth_auto_login: true # Set to true to attempt login with OAuth automatically, skipping the login screen.
  openflow_datasource: true # inject openflow data source, this should be set to false after first deploy if you set alert manager credentials
  prometheus_datasource: true # inject prometheus data source
  persistence:
    size: 10Gi
    storageclass:
  smtp:
    enabled: false
    host:
    user:
    password:
    from:
    fromname:
loki:
  enabled: false # require using export.image: otel/opentelemetry-collector-contrib
  image: grafana/loki
  persistence:
    size: 10Gi
    storageclass:
  nodeSelector: {}
prometheus: # deprecated, we use victoriametrics now.
  enabled: false
  exposed: false
  persistence:
    size: 10Gi
    storageclass:
  resources: {}
exporter: # open telemetry exporter. This service receive metrics and spans from openrpa/nodered and openrpa robots
  enabled: false # enable setting up the, open telemetry exporter
  exposed: false # expose using IngressRoute so remote nodered and openrpa robots can send data
  type: ClusterIP # set the service type of exporter, default is ClusterIP, set to LoadBalancer to expose as a seperate service with a dedicated it
  loadBalancerIP: # set the load balancer IP if type is set to LoadBalancer
  command: /otelcol # overwrite with /otelcol-contrib if using image: otel/opentelemetry-collector-contrib
  # loglevel: info # debug, info
  # image: otel/opentelemetry-collector:0.30.1
  # image: otel/opentelemetry-collector:0.38.0
  # image: otel/opentelemetry-collector:0.53.0
  image: otel/opentelemetry-collector
  elastic:
    metricsenabled: false
    traceenabled: false
    insecure: true # is the endpoint using TLS or not ?
    insecure_skip_verify: true # whether to skip verifying the certificate or not
    elastic_apm_server_endpoint: 
    elastic_apm_server_authorization: 
    secret_token: 
  opensearch:
    metricsenabled: false
    traceenabled: false
    logsenabled: false
    insecure: true # is the endpoint using TLS or not ?
    insecure_skip_verify: true # whether to skip verifying the certificate or not
    data_prepper_host: 
  kubestatemetrics:
    enabled: false
    deploy: false
    exporttarget: metrics-server-exporter.kube-system.svc.cluster.local:8000
    kubesystemtarget: kube-state-metrics.kube-system.svc.cluster.local:8080
  resources: {}
  memorylimit:
    enabled: false
    limit_mib: 1500 # 80% of maximum memory up to 2G
    spike_limit_mib: 512 # 25% of limit up to 2G
    check_interval: 5s
jaeger: # for visualizing and optionally also saving all spans, we can use jaeger.
  enabled: false
  exposed: false
  # provisionDataStore: 
  #   cassandra: false
  # storage:
  #   type: elasticsearch
  #   elasticsearch:
  #     scheme: https
  #     host: "opensearch-cluster-master"
  #     port: "9200"
  #     user: admin
  #     password: admin
  #     usePassword: true
  #     cmdlineParams:
  #       es.version: 7
  # tag: 1.22.0
  # agent:
  #   enabled: false
  # collector:
  #   enabled: true
  #   extraEnv:
  #     - name: ES_TLS_ENABLED
  #       value: "true"
  #     - name: ES_TLS_SKIP_HOST_VERIFY
  #       value: "true"  

  # query:
  #   enabled: true
  #   extraEnv:
  #     - name: ES_TLS_ENABLED
  #       value: "true"
  #     - name: ES_TLS_SKIP_HOST_VERIFY
  #       value: "true"  
  #   agentSidecar:
  #     enabled: false
  #   service:
  #     # type: LoadBalancer
  #     port: 80
  #   config: |-
  #     {
  #       "dependencies": {
  #         "dagMaxNumServices": 200,
  #         "menuEnabled": false
  #       },
  #       "menu": [
  #     {
  #       "label": "OpenIAP Resources",
  #       "items": [
  #         {
  #           "label": "OpenFlow",
  #           "url": "https://app.openiap.io/"
  #         },
  #           {
  #           "label": "Support options",
  #           "url": "https://openiap.io/"
  #         }
  #           ]
  #         }
  #       ],
  #       "archiveEnabled": true,
  #       "search": {
  #         "maxLookback": {
  #           "label": "7 Days",
  #           "value": "7d"
  #         },
  #         "maxLimit": 2500
  #       }
  #     }

  # spark:
  #   enabled: false

  # esIndexCleaner:
  #   enabled: false

  # esRollover:
  #   enabled: false

  # esLookback:
  #   enabled: false
zipkin: # for visualizing and optionally also saving all spans, we can use zipkin.
  enabled: false
  exposed: false # expose in ingress
  selftracing: false # log spans to self, for troubleshooting zipkin it self
  cassandra: false # persist all data to cassandra, instead of only keeping them temporarily
  javaopts: "-Xms128m -Xmx512m -XX:+ExitOnOutOfMemoryError" # set java memory limits, this should be lower but close to the kubernetes limits.
  resources: {}
cassandra:
  enabled: false
  persistence:
    size: 10Gi
    storageclass:
  storagesize: 10Gi
  resources: {}
victoria-metrics-cluster:
  enabled: false
victoriametrics: # for exposing all all metric data for grafana, optionally also saving all metric data, we use victoriametrics
  enabled: false
  exposed: false
  # insertendpoint: http://openflow-victoria-metrics-cluster-vminsert.stats.svc.cluster.local:8480/insert/0/prometheus/
  # selectendpoint: http://openflow-victoria-metrics-cluster-vmselect.stats.svc.cluster.local:8481/select/0/prometheus/
  retentionPeriod: # override default retension of 1 month https://github.com/VictoriaMetrics/VictoriaMetrics#retention
  persistence:
    enabled: false
    size: 10Gi
    storageclass:
  resources: {}
mongodb:
  enabled: true # by setting this to enable AND setting architecture to either standalone or replicaset, a mongodb installation will be deployed as well
  architecture: standalone
  metrics:
    enabled: false
  auth:
    enabled: true
    username: openflow
    password: supersecret
    database: openflow
  mongodbUsername: openflow
  mongodbDatabase: supersecret
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 8Gi
  nodeSelector: {}
  arbiter:
    nodeSelector: {}
rediscommander:
  enabled: false
  exposed: false
