apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontendingress
  annotations:
    kubernetes.io/ingress.class: "traefik"
{{- if eq .Values.openflow.protocol "https" }}
    traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
  {{- if .Values.openflow.tlsSecret }}
    traefik.ingress.kubernetes.io/router.tls: "true"
  {{- end }}
  {{- if .Values.openflow.certresolver }}
    traefik.ingress.kubernetes.io/router.tls.certresolver: {{ .Values.openflow.certresolver | quote }}
    traefik.ingress.kubernetes.io/router.tls: "true"
  {{- end }}
  {{- if .Values.openflow.certificate.certmain }}
    traefik.ingress.kubernetes.io/router.tls.domains.0.main: {{ .Values.openflow.certificate.certmain | quote }}
  {{- end }}
  {{- if .Values.openflow.certificate.certsans }}
    traefik.ingress.kubernetes.io/router.tls.domains.0.sans: {{ .Values.openflow.certificate.certsans | quote }}
  {{- end }}
{{- else }}
    traefik.ingress.kubernetes.io/router.entrypoints: web
{{- end }}
spec:
  rules:
    - host: {{ required "protocol required!" .Values.frontend_domain | quote }}
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: frontend
                port:
                  name: www
{{- if and .Values.openflow.tlsSecret (eq .Values.openflow.protocol "https") }}
  tls:
    - secretName: {{ .Values.openflow.tlsSecret | quote }}
{{- end }}
