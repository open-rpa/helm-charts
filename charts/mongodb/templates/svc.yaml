apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    name: mongo
spec:
  clusterIP: None 
  selector:
    service: mongo # add both mongo and mongoarbiter
    # app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
{{- if .Values.service.enabled -}}
{{- range $mongocount, $e := until (.Values.replicas|int) -}}
{{ $c := $mongocount | int }}
{{ $c = add1 $c }}
apiVersion: v1
kind: Service
metadata:
  name: mongo-{{ $mongocount }}
spec:
  externalTrafficPolicy: Local
  {{- if ge (len $.Values.service.external) ($c) -}}
    {{- with (index $.Values.service.external $mongocount) }}
  type: LoadBalancer
  loadBalancerIP: {{ .ip }}
    {{- end }}
  {{- else }}  
  type: {{ $.Values.service.type }}
  {{- end }}
  selector:
    statefulset.kubernetes.io/pod-name: mongo-{{ $mongocount }}
  ports:
    - protocol: TCP
  {{- if ge (len $.Values.service.external) ($c) -}}
    {{- with (index $.Values.service.external $mongocount) }}
      port: {{ .port }}
    {{- end }}
  {{- else }}  
      port: 27017
  {{- end }}
      targetPort: 27017
---
  {{- if $.Values.ingress.enabled }}
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRouteTCP
metadata:
  name: mongo-{{ $mongocount }}
spec:
  entryPoints:
  {{- range $.Values.ingress.entryPoints }}
    - {{ . | quote }}
  {{- end }}
  routes:
  # - match: HostSNIRegexp(`mongo-{subdomain:[[:ascii:]]+}.{{$.Values.ingress.domainprefix}}`)
  - match: HostSNI(`mongo-{{ $mongocount }}.{{$.Values.ingress.domainprefix}}`)
    services:
    - name: mongo-{{ $mongocount }}
      port: 27017
    {{- if $.Values.ingress.passthrough }}
  tls:
    passthrough: true
    {{- else if $.Values.ingress.certResolver }}
  tls:
    certResolver: {{$.Values.ingress.certResolver}}
    domains:
      - main: "{{$.Values.ingress.domainprefix}}"
        sans:
          - "*.{{$.Values.ingress.domainprefix}}"
    {{- end }}
---
  {{- end }}
{{- end }}
{{- end }}