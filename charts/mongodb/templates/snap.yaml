{{- if eq .Values.snap.snapshotclass.create true }}
apiVersion: snapshot.storage.k8s.io/v1
kind: VolumeSnapshotClass
metadata:
  name: mongo-snap
driver: {{ .Values.snap.snapshotclass.driver }}
deletionPolicy: Delete
{{- end }}
---
{{- if eq .Values.snap.enabled true }}
apiVersion: snapscheduler.backube/v1
kind: SnapshotSchedule
metadata:
  name: mongo
spec:
  # A LabelSelector to control which PVCs should be snapshotted
  {{- if .Values.snap.claimSelector }}
  claimSelector:
    matchLabels:
  {{- toYaml .Values.snap.claimSelector | nindent 6 }}
  {{- end }}
  # Set to true to make the schedule inactive
  disabled: false  # optional
  retention:
    {{- if .Values.snap.retention }}
    expires: {{ .Values.snap.retention | quote }}
    {{- end }}
    {{- if .Values.snap.maxCount  }}
    maxCount: {{ .Values.snap.maxCount }}
    {{- end }}    
  schedule: {{ .Values.snap.schedule | quote }}
  snapshotTemplate:
    {{- if .Values.snap.snapshotClassName }}
    snapshotClassName: {{ .Values.snap.snapshotClassName }}
    {{- else if eq .Values.snap.snapshotclass.create true }}
    snapshotClassName: mongo-snap
    {{- end }}
{{- end }}
{{- if .Values.snap.restoresnap }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongorestore
spec:
  dataSource:
    name: {{ .Values.snap.restoresnap }}
    kind: VolumeSnapshot
    apiGroup: snapshot.storage.k8s.io
{{- if .Values.persistence.storageclass }}
 storageClassName: {{ .Values.persistence.storageclass | quote }}
{{- end }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.persistence.size }}
---
apiVersion: v1
kind: Pod
metadata:
  name: mongorestore
spec:
  containers:
  - name: mongo
    image: mongo
    ports:
    - containerPort: 27017
    volumeMounts:
    - name: mongo-conf
      mountPath: /data/conf
    - name: data
      mountPath: /data/db
  volumes:
    - name: mongo-conf
      configMap:
        name: mongo-conf-map
        defaultMode: 0600
        items:
          - key: config.sh
            path: config.sh
          - key: mongodb.key
            path: mongodb.key
          - key: init-mongo.js
            path: init-mongo.js
    - name: data
      persistentVolumeClaim:
        claimName: mongorestore
{{- end }}